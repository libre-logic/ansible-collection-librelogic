# FireHOL configuration file
#
# See firehol.conf(5) manual page and FireHOL Manual for details.
#
################################################################################

version 6

################################################################################

# Configuration variables
# See firehol-defaults.conf

# Enable/disable IPv6
ENABLE_IPV6=0

# Prefix for firehol log messages
FIREHOL_LOG_PREFIX="[firehol]"

# default action for traffic not matched by any interface or router definition that
# was incoming, outgoing or for forwarding respectively. This traffic is logged.
UNMATCHED_INPUT_POLICY="DROP"
UNMATCHED_FORWARD_POLICY="DROP"
UNMATCHED_OUTPUT_POLICY="DROP"

# default action for traffic not matched by any rule WITHIN an interface
# It can be overridden using the 'policy ACTION' directive
DEFAULT_INTERFACE_POLICY="DROP"

################################################################################

# Custom service definitions
{% for service in firehol_custom_services %}
server_{{ service.name }}_ports="{{ service.ports }}"
client_{{ service.name }}_ports="default"
{% endfor %}

################################################################################

# Router definitions - traffic forwarding between network interfaces
{% for router in firehol_routers %}
router {{ router.name }}
{% for service in router.allow_route_to %}
    server {{ service.name }} accept inface any outface {{ service.to_interface }}
{% endfor %}
{% for service in router.allow_route_from %}
    server any accept inface {{ service.from_interface }} outface any
{% endfor %}

{% endfor %}

# Firewall rules - traffic to/from the local machine
{% for network in firehol_networks %}
ipv4 interface {{ network.interface }} {{ network.name }} src {{ network.src }}
    protection strong
    policy {{ network.policy }}
{% if firehol_docker_swarm_compat %}
    masquerade src not "127.0.0.1/16" # apply SNAT for all traffic leaving this interface
{% endif %}
{% for service in network.allow_input %}
    server {{ service.name }} accept src "{{ service.src }}"
{% endfor %}
{% for service in network.allow_output %}
    client {{ service.name }} accept dst "{{ service.dst }}"
{% endfor %}

{% endfor %}
{% if firehol_docker_swarm_compat %}
# Docker swarm routing
ipv4 interface docker_gwbridge docker_swarm_bridge
    policy accept
interface docker0 docker_bridge
    policy accept
router4 docker2docker inface docker0 outface docker0
    server all accept
router dockergw2dockergw inface docker_gwbridge outface docker_gwbridge
    policy accept
router dockergw2inet inface docker_gwbridge outface any
    policy accept
router docker2inet inface docker0 outface any
    policy accept

{% endif %}

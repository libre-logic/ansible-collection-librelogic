##### COMMON/GENERAL SYSTEM SETTINGS #####
##### HOSTNAME #####
# yes/no: update hostname using ansible inventory name
setup_hostname: yes

##### DNS RESOLVER #####
# update DNS nameserver settings (resolv.conf) (yes/no)
setup_dns: no
# list of DNS nameservers IP addresses
# Example:
# dns_nameservers:
#   - "1.1.1.1"
#   - "1.0.0.1"
dns_nameservers: []


##### SYSCTL (NETWORKING/MEMORY) #####
# update sysctl settings (yes/no)
setup_sysctl: yes
# Enable/disable packet forwarding between network interfaces (routing) (yes/no)
sysctl_allow_forwarding: no
# answer ICMP pings (yes/no)
sysctl_answer_ping: no
# "swappiness" setting. 100: swap/reclaim RAM aggressively. 0: do not swap unless necessary
sysctl_vm_swappiness: '10'
# "VFS cache pressure" setting. 100+ : prefer caching memory pages over disk cache
sysctl_vm_vfs_cache_pressure: '150'

### PACKAGE MANAGEMENT ###
# yes/no: setup APT sources (security, backports) and automatic security upgrades
setup_apt: yes
# yes/no: enable 'contrib' and 'non-free' software sections in debian APT repositories
apt_enable_nonfree: no
# yes/no: setup apt-listbugs (Debian only)
apt_listbugs: yes
# Debian bug numbers/packages to ignore for apt-listbugs (don't let these bugs block package installation)
apt_listbugs_ignore_list:
  - 909750 # https://bugs.debian.org/909750 - reason: FHS violation, not critical
  - 933001 # https://bugs.debian.org/933001 - reason: plymouth is not installed
  - 933749 # https://bugs.debian.org/933749 - reason: disk space not a problem on most hosts
  - 935042 # https://bugs.debian.org/935042 - reason: skip-upgrade-test=yes set in monitoring role
  - 967010 # https://bugs.debian.org/967010 - reason: not reproducible
  - 935182 # https://bugs.debian.org/935182 - reason: only affects files on samba shares in specific setups
  - 928963 # https://bugs.debian.org/928963 - reason: only affects sparc64, powerpc64, and s390x architectures
  - 967010 # https://bugs.debian.org/967010 - reason: not reproducible
  - 918012 # https://bugs.debian.org/918012 - reason: only affects debian 9
  - 969072 # https://bugs.debian.org/969072 - reason: only happens during groff build, not when running the command
  - 987570 # https://bugs.debian.org/987570 - reason: packaging bug, no impact
  - 922981 # https://bugs.debian.org/922981 - reason: impact limited to new certificates, patch pending upload
  - 929685 # https://bugs.debian.org/929685 - packaging bug, no impact
  - 991449 # https://bugs.debian.org/991449 - not using bsd-mailx
  - 994510 # https://bugs.debian.org/994510 - only affects i386 architecture
  - 1000826 # https://bugs.debian.org/1000826 - only affects python 3.10
  - 1003150 # https://bugs.debian.org/1003150 - distutils already installed
  - 1000796 # https://bugs.debian.org/1000796 - no impact on common use cases
  - 993716 # https://bugs.debian.org/993716 - IPv6 is disabled
  - 945001 # https://bugs.debian.org/945001 - only affects hosts with multiple OS in grub
  - 948318 # https://bugs.debian.org/948318 - old lbc6 versions are automatically removed
  - 998516 # https://bugs.debian.org/998516 - only affects bridged interfaces, workaround in bug report
  - 990026 # https://bugs.debian.org/990026 - MAILTO not used in cron jobs
  - 1004111 # https://bugs.debian.org/1004111 - unconfirmed, unattended-upgrades failure will trigger an error report by mail
  - 1003012 # https://bugs.debian.org/1003012 - fixed in point release
  - 995387 # https://bugs.debian.org/994971 - only affects #994971/nvidia-driver not in use
  - 992045 # https://bugs.debian.org/992045 - fixed in debian-security, local only, high RAM usage noticeable by monitoring
  - 968368 # https://bugs.debian.org/968368 - option bond-master not in use
  - 990428 # https://bugs.debian.org/990428 - option bond-slaves not in use
  - 984574 # https://bugs.debian.org/984574 - fixed in point release, workaround in bug report
  - 998008 # https://bugs.debian.org/998008 - NIS not in use
  - 993578 # https://bugs.debian.org/993578 - fixed in point release, gpgconf --check-programs not used
  - 990318 # https://bugs.debian.org/990318 - no impact, incomplete removal of python2
  - 995115 # https://bugs.debian.org/995115 - unconfirmed, workaround is to comment out DPkg::Pre-Install-Pkgs in /etc/apt/apt.conf.d/10apt-listbugs
  - 991936 # https://bugs.debian.org/991936 - fixed in point release, no workaround available
  - 975931 # https://bugs.debian.org/975931 - only affects armhf architecture
  - 983393 # https://bugs.debian.org/983393 - only affects package build/packaging
  - 1000421 # https://bugs.debian.org/1000421 - only affects package build/packaging
  - 986803 # https://bugs.debian.org/986803 - will be fixed in point release, workaround: build only trusted source code

### DATE/TIME ###
# yes/no: setup ntp time service
setup_datetime: yes
# timezone name (if commented out, timezone will not be changed)
# timezone: "Etc/UTC"

##### SSH SERVER #####
# setup/harden SSH server (yes/no)
setup_ssh: yes
# List of public SSH key files to authorize on the server for the ansible user
# Example: ['public_keys/john.pub', 'public_keys/jane.pub']
# Removing a key here does not remove it on the server!
ssh_authorized_keys: []
# a list of public keys that are never accepted by the ssh server
ssh_server_revoked_keys: []
# sshd and SFTP server log levels, respecively (QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, DEBUG3)
ssh_log_level: "VERBOSE"
ssh_sftp_loglevel: "VERBOSE"
# types of SSH TCP forwarding to allow (no, local, remote, all - QUOTED)
# remote/all is required to use the host as a jumpbox
ssh_allow_tcp_forwarding: "no"
# enable/disable root SSH logins (yes/no/prohibit-password/forced-commands-only - QUOTED)
ssh_permit_root_login: "no"
# enable/disable SSH password authentication (yes, no - QUOTED)
ssh_password_authentication: "no"

# SSH Server allowed Key Exchange alogrithms
# Add other KexAlgortithms here if your clients do not support modern/secure KEX
ssh_kexalgorithms:
  - diffie-hellman-group-exchange-sha256

# SSH Server allowed HMACs (hash alogrithms)
# Add other HMAC alogrithms here if your clients do not support modern/secure HMACs
ssh_hmacs:
  - hmac-sha2-512-etm@openssh.com
  - hmac-sha2-256-etm@openssh.com
  - umac-128-etm@openssh.com
  - hmac-sha2-512
  - hmac-sha2-256

##### FIREWALL #####

# setup firewall (yes/no)
setup_firewall: yes
# alias for LAN addresses (CIDR notation,comma-separated values)
firehol_alias_lan: "10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"
# Firewall rules
firehol_networks:
  - name: "global" # a name for this rule set
    src: "any" # traffic to/from any IP address
    interface: "any" # traffic to/from any network interface
    policy: "RETURN" # policy to apply for traffic that matches no rules (one of DROP/RETURN/ACCEPT/REJECT)
    allow_input: # incoming traffic to allow (name: service name, src: source IP address/subnet)
      - { name: "ssh", src: "any" } # ssh
      - { name: "ping", src: "any" } # incoming ICMP pings
      # - { name: "http", src: "{{ firehol_alias_lan }}" } # web server
      # - { name: "https", src: "{{ firehol_alias_lan }}" } # web server
      # - { name: "netdata", src: "{{ firehol_alias_lan }}" } # monitoring dashboard
    allow_output: # outgoing traffic to allow (name: service name, dst: destination IP address/subnet)
      - { name: "dns", dst: "any" } # domain name resolution
      - { name: "ntp", dst: "any" } # time/date synchronization
      - { name: "dhcp", dst: "{{ firehol_alias_lan }}" } # DHCP requests on LAN
      - { name: "http", dst: "any" } # outgoing HTTP requests
      - { name: "https", dst: "any" } # outgoing HTTPS requests
      - { name: "ping", dst: "any" } # outgoing ICMP pings
      - { name: "submission", dst: "any" } # outgoing mail/port 587
      # - { name: "ssh", dst: "any" } # ssh/git access to anywhere
      # - { name: "all", dst: "any" } # allow ALL outgoing connections
# Router definitions - traffic forwarding between network interfaces
# Example:
# firehol_routers:
#   - name: "docker" # arbitrary name for the router, example for docker
#     allow_route_to: # forward these services from any interface, to the interface specified
#       - { name: "http", to_interface: "docker_gwbridge" }
#       - { name: "https", to_interface: "docker_gwbridge" }
#       - { name: "git", to_interface: "docker_gwbridge" }
#     allow_route_from: # forward these services to any interface, from the interface specified
#       - { name: "any", from_interface: "docker_gwbridge" }
#       - { name: "any", from_interface: "docker0" }
firehol_routers: []
# if docker role is enabled, add relevant firewall/router rules (yes/no):
# - allow traffic from host to containers
# - allow traffic between containers
# - allow all outgoing swarm traffic
# - insert SNAT rules for outgoing swarm traffic
firehol_docker_swarm_compat: yes
# custom services definitions, in addition to https://firehol.org/services/
firehol_custom_services:
  - { name: "git2222", ports: "tcp/2222" } # Git on custom port
  - { name: "netdata", ports: "tcp/19999" } # Netdata monitoring system web interface/API
  - { name: "proxmoxweb", ports: "tcp/8006" } # Proxmox VE web interface
  - { name: "proxmoxcluster", ports: "udp/5405" } # Proxmox VE cluster (corosync)
  - { name: "dockerswarm", ports: "tcp/2377" } # Docker swarm node communication
  - { name: "dockerdiscovery", ports: "tcp/7946 udp/7946" } # Docker swarm container network discovery
  - { name: "dockeroverlay", ports: "udp/4789" } # Docker overlay network traffic

### FAIL2BAN ###
# setup fail2ban bruteforce detection/prevention system (yes/no)
setup_fail2ban: yes
# list of IPs to never ban - 127.0.0.1 is always whitelisted
fail2ban_ignoreip:
  - '10.0.0.0/8'
  - '192.168.0.0/16'
  - '172.16.0.0/12'

# fail2ban default ban duration (in seconds)
# The largest possible value for ipset-based ban actions is 2147483
fail2ban_default_bantime: "2147483"

# fail2ban: default interval (in seconds) before counting failures towards a ban
fail2ban_default_findtime: "6000"
# fail2ban default number of failures that have to occur in the last findtime to ban the IP
fail2ban_default_maxretry: 5
# destination email address used for some actions
fail2ban_destemail: "root"

### USERS ###
# setup user accounts/PAM configuration (yes/no)
setup_users: yes
# Additional user accounts to create.
# Supports these parameters from the user (https://docs.ansible.com/ansible/latest/modules/user_module.html) module:
#   name, password, comment, create_home, home, groups, append, generate_ssh_key, update_password
# In addition these optional parameters are supported:
#   ssh_authorized_keys: list of public key files to authorize on this account
#   sudo_nopasswd_commands: list of commands the user should be able to run with sudo without password
# Example:
# linux_users:
#    - name: "remotebackup"
#      password: "{{ linux_users_remotebackup_password }}"
#      groups: [ "ssh", "sudo" ]
#      comment: "limited user account for remote backups"
#      ssh_authorized_keys: ['public_keys/root@backupserver.id_rsa.pub']
#      home: "/home/remotebackup"
#      sudo_nopasswd_commands: ['/usr/bin/rsync']
#    - name: "my-sftp-account"
#      password: "{{ vault_linux_users_delivery_password }}"
#      home: "/var/lib/sftp/my-sftp-account"
#      comment: "SFTP-only account"
#      ssh_authorized_keys: [ "public_keys/gitlab-runner@my.EXAMPLE.org.pub", "public_keys/client1@EXAMPLE.org.pub" ]
#      groups: [ 'ssh', 'sftponly' ]
#    - name: "{{ ansible_user }}"
#      groups: adm
#      append: yes
#      comment: "ansible user/allowed to read system logs"
linux_users: []
# list of users allowed to use crontab for task scheduling
linux_users_crontab_allow: ['root']

### OUTGOING MAIL ###
# (yes/no) install outgoing system mail (msmtp)
setup_msmtp: no
# following msmtp_* variables are required is setup_msmtp: yes
# mail relay (SMTP server) address/port/username/password
msmtp_smtp_host: "smtp.CHANGEME.org"
msmtp_smtp_port: 587
msmtp_smtp_user: "CHANGEME"
msmtp_smtp_password: "CHANGEME"
# mail address to redirect all local mail to
msmtp_admin_email: "CHANGEME"
# (auto/admin@CHANGEME.org) sender address for outgoing mail
msmtp_from: 'auto'
# enable SMTP authentication (LOGIN) (yes/no)
msmtp_auth_enabled: yes
# yes/no: enable STARTTLS connection to the SMTP server
msmtp_tls_enabled: yes
# yes/no: enforce checking for valid server TLS certificates
msmtp_tls_certcheck: yes
# yes/no: use STARTTLS
msmtp_starttls: yes
# (optional) TLS certificate fingerprint of the SMTP server. use this to accept a self-signed certificate. get the server's certificate fingerprint with openssl s_client -connect $smtp_host:587 -starttls smtp < /dev/null 2>/dev/null |openssl x509 -fingerprint -noout
# msmtp_host_fingerprint: '11:22:33:44:55:66:77:88:99:00:13:37:AA:BB:CC:DD:EE:FF:AD:C2'
# the user to forward all local root mail to, if msmtp setup is disabled
mail_root_alias: "{{ ansible_user }}"


### PACKAGES ###
# install a basic set of interactive command-line diagnostic/file manipulation/shell utilities (yes/no) - see tasks/50utilities.yml for the full list
setup_cli_utils: yes
# install haveged entropy generator (yes/no) - good to have on virtual machines where system is frequently running out of entropy
setup_haveged: yes


##### CA CERTIFICATES #####

# yes/no: install extra CA certificates to the OS trust store
# place certificate files in a `certificates/` directory at the root of the playbook, named `*.crt`
install_ca_certificates: no

# yes/no: add the proxmox 'no-subscription' APT repository to sources.list
apt_add_proxmox_repository: no

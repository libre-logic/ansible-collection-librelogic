##### NGINX REVERSEPROXY CONFIGURATION #####

- name: create configuration directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "/etc/docker/services-config/nginx/"
    - "/etc/docker/services-config/nginx/conf.d"
    - "/etc/docker/services-config/nginx/ssl/selfsigned"
    - "/etc/docker/services-config/nginx/static"
  check_mode: no

- name: copy nginx configuration
  template:
    src: "etc_docker_services-config/nginx/nginx.conf.j2"
    dest: "/etc/docker/services-config/nginx/nginx.conf"
    mode: 0644

##### SSL/TLS CERTIFICATES #####

- name: install requirements for certificates generation
  apt:
    state: present
    package:
      - certbot
      - python3-openssl

- name: create base directory for letsencrypt certificates
  file:
    state: directory
    path: /etc/letsencrypt/live
    owner: root
    group: root
    mode: 0700

- name: copy certbot configuration
  template:
    src: etc_letsencrypt_cli.ini.j2
    dest: /etc/letsencrypt/cli.ini
    owner: root
    group: root
    mode: 0644

- name: copy certbot systemd timer configuration
  template:
    src: etc_systemd_system_certbot.timer.j2
    dest: /etc/systemd/system/certbot.timer
    owner: root
    group: root
    mode: 0644


##### DOCKER STACK #####

- name: copy configuration file for nginx-reverseproxy docker stack
  template:
    src: "etc_docker_services-config/nginx/docker-compose.yml.j2"
    dest: "/etc/docker/services-config/nginx/docker-compose.yml"
    mode: 0644

- name: init a new docker swarm
  docker_swarm:
    state: present

- name: create nginx docker network
  docker_network:
    name: nginx
    driver: overlay
    scope: swarm
    attachable: yes

- name: create nginx-reverseproxy docker stack
  docker_stack:
    state: present
    name: nginx-reverseproxy
    compose:
      - '/etc/docker/services-config/nginx/docker-compose.yml'

- name: run all notified handlers
  meta: flush_handlers

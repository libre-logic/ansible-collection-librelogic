---

##### NETDATA SYSTEM MONITOR #####

- name: install netdata requirements
  apt:
    package:
      - bash
      - curl
      - iproute2
      - python
      - python-yaml
      - python-dnspython
      - python-ipaddress
      - python-mysqldb
      - lm-sensors
      - libmnl0
      - netcat
      - libuv1
      - libjudydebian1
      - openssl
      - liblz4-1
      - git # required to clone additional modules
      - python-backports.ssl-match-hostname # docker_engine support
      - needrestart # required for needrestart module
      - python-psycopg2 # postgresql support
      #- "python-pymongo" #mongodb support
    state: present

# required for systemd services charts/cgroups accounting
- name: create systemd dynamic configuration directory
  file:
    path: '/etc/systemd/system.conf.d'
    state: directory
    mode: 0755

- name: enable systemd cgroups ressource accounting (systemd services chart)
  template:
    src: 'etc_systemd_system.conf.d_accounting.conf.j2'
    dest: '/etc/systemd/system.conf.d/accounting.conf'
    mode: 0644
  notify: re-execute the systemd manager

##### INSTALL NETDATA FROM BINARY #####

# TODO method for netdata installation
# TODO only 'binary' is supported
- name: set netdata installation method
  set_fact:
    netdata_install_method: 'binary'

- name: download netdata binary installer
  get_url:
    url: https://github.com/netdata/netdata/releases/download/{{ netdata_version }}/netdata-{{ netdata_version }}.gz.run
    dest: /root/netdata-{{ netdata_version }}.gz.run
    mode: 0700
  when: netdata_install_method == 'binary'

- name: check netdata installer integrity
  command: /root/netdata-{{ netdata_version }}.gz.run --check
  changed_when: False
  when: netdata_install_method == 'binary'

# TODO not idempotent/overwrites configuration
- name: run netdata installer
  command: /root/netdata-{{ netdata_version }}.gz.run --accept -- --dont-start-it --disable-telemetry
  when: netdata_install_method == 'binary'
  notify: restart netdata

#####################################

- name: copy netdata configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: 'opt_netdata_etc_netdata_netdata.conf.j2', dest: '/opt/netdata/etc/netdata/netdata.conf' }
    - { src: 'opt_netdata_etc_netdata_.opt-out-from-anonymous-statistics.j2', dest: '/opt/netdata/etc/netdata/.opt-out-from-anonymous-statistics' }
    - { src: 'opt_netdata_etc_netdata_go.d_httpcheck.conf.j2', dest: '/opt/netdata/etc/netdata/go.d/httpcheck.conf' }
    - { src: 'opt_netdata_etc_netdata_go.d_x509check.conf.j2', dest: '/opt/netdata/etc/netdata/go.d/x509check.conf' }
    - { src: 'opt_netdata_etc_netdata_go.d_portcheck.conf.j2', dest: '/opt/netdata/etc/netdata/go.d/portcheck.conf' }
    - { src: 'opt_netdata_etc_netdata_health.d_dockerd.conf.j2', dest: '/opt/netdata/etc/netdata/health.d/dockerd.conf' }
    - { src: 'opt_netdata_etc_netdata_health.d_processes.conf.j2', dest: '/opt/netdata/etc/netdata/health.d/processes.conf' }
  notify: restart netdata

- name: delete legacy custom configuration files
  file:
    path: /opt/netdata/etc/netdata/apps_groups.conf
    state: absent

##### SELF-SIGNED SSL CERTIFICATES #####

# runs even in check mode so that following tasks don't fail
# required to generate self-signed certificates
- name: install python3 ssl libraries
  apt:
    package:
      - python3-openssl
      - python3-cryptography
    state: present
  check_mode: no

# create directory even in check mode, so that following tasks can be checked
- name: create directory for netdata SSL certificates/keys
  file:
    path: /etc/ssl/netdata
    state: directory
    owner: root
    group: netdata
    mode: 0750
  check_mode: no
  ignore_errors: "{{ ansible_check_mode }}"

- name: generate openssl private key
  openssl_privatekey:
    path: "/etc/ssl/netdata/netdata-key.pem"
    owner: root
    group: netdata
    mode: "0640"
  notify: restart netdata
  ignore_errors: "{{ ansible_check_mode }}"

- name: generate openssl csr
  openssl_csr:
    path: "/etc/ssl/netdata/netdata-csr.pem"
    privatekey_path: "/etc/ssl/netdata/netdata-key.pem"
    common_name: "{{ inventory_hostname }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: generate self-signed openssl certificate
  openssl_certificate:
    path: "/etc/ssl/netdata/netdata-cert.pem"
    privatekey_path: "/etc/ssl/netdata/netdata-key.pem"
    csr_path: "/etc/ssl/netdata/netdata-csr.pem"
    provider: selfsigned
    owner: root
    group: netdata
    mode: "0640"
  notify: restart netdata
  ignore_errors: "{{ ansible_check_mode }}"

#######################################

- name: install additional netdata modules
  include: netdata-extra-modules.yml

- name: ensure netdata service is started and enabled
  service:
    name: netdata
    state: started
    enabled: yes
  ignore_errors: "{{ ansible_check_mode }}"

# force applying configuration early (IP access restrictions)
- name: run all notified handlers now
  meta: flush_handlers

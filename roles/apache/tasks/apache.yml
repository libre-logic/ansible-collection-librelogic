##### PACKAGES #####

- name: configure APT to install apache and modules from backports (Debian 10)
  template:
    src: etc_apt_preferences.d_99-apache2-buster-backports.j2
    dest: /etc/apt/preferences.d/99-apache2-buster-backports
    mode: 0644
  when: ansible_facts.distribution == 'Debian' and ansible_facts.distribution_release == 'buster'

- name: install apache packages
  apt:
    state: present
    package:
      - apache2
      - libapache2-mod-evasive
      - libapache2-mod-md
  ignore_errors: "{{ ansible_check_mode }}"
  tags: ssl

- name: remove mod-php (replaced with php-fpm)
  apt:
    package:
      - libapache2-mod-php
      - libapache2-mod-php7.2
      - libapache2-mod-php7.3
      - libapache2-mod-php7.4
    state: absent
  notify: restart apache

# restart apache to apply mod-php removal
- name: apply configuration (flush handlers)
  meta: flush_handlers

##### APACHE MODULES/CONFIGURATON #####

- name: copy apache configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: 'etc_apache2_conf-available_security.conf.j2', dest: '/etc/apache2/conf-available/security.conf' }
    - { src: 'etc_apache2_conf-available_logging.conf.j2', dest: '/etc/apache2/conf-available/logging.conf' }
    - { src: 'etc_apache2_conf-available_ssl-common.conf.j2', dest: '/etc/apache2/conf-available/ssl-common.conf' }
    - { src: 'etc_apache2_conf-available_mod-md.conf.j2', dest: '/etc/apache2/conf-available/mod-md.conf' }
    - { src: 'etc_apache2_ports.conf.j2', dest: '/etc/apache2/ports.conf' }
  notify: reload apache
  tags: ssl

- name: disable unnecessary apache modules
  command: a2dismod {{ item }}
  args:
    removes: /etc/apache2/mods-enabled/{{ item }}.load
  with_items:
    - 'cgi'
    - 'php7.0' # conflicts with mpm_event
    - 'php7.3' # conflicts with mpm_event
    - 'php7.2' # conflicts with mpm_event
    - 'php7.4' # conflicts with mpm_event
    - 'mpm_prefork' # conflicts with mpm_event
  notify: restart apache

- name: enable apache modules
  command: a2enmod {{ item }}
  args:
    creates: "/etc/apache2/mods-enabled/{{ item }}.load"
  with_items:
    - 'auth_basic'
    - 'headers'
    - 'rewrite'
    - 'md'
    - 'mpm_event'
    - 'proxy'
    - 'proxy_http'
    - 'http2'
  notify: restart apache
  tags: ssl

- name: enable apache modules ssl
  command: a2enmod {{ item }}
  args:
    creates: "/etc/apache2/mods-enabled/{{ item }}.load"
  with_items:
    - 'ssl'
  notify: restart apache
  when: apache_with_ssl
  tags: ssl

-
- name: enable apache configuration snippets 1/2
  command: a2enconf {{ item }}
  args:
    creates: "/etc/apache2/conf-enabled/{{ item }}.conf"
  with_items:
    - 'security'
    - 'logging'
    - 'mod-md'
  notify: reload apache
  tags: ssl

- name: enable apache configuration snippets 2/2
  command: a2enconf {{ item }}
  args:
    creates: "/etc/apache2/conf-enabled/{{ item }}.conf"
  with_items:
    - 'ssl-common'
  notify: reload apache
  when: apache_with_ssl
  tags: ssl


- include: apache-mod-evasive.yml

- name: copy apache sites config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  notify: reload apache
  with_items:
    - src: etc_apache2_sites-available_000-sites.conf.j2
      dest: /etc/apache2/sites-available/000-sites.conf
    - src: etc_apache2_sites-available_reverseproxy.conf.j2
      dest: /etc/apache2/sites-available/reverseproxy.conf

- name: enable apache sites configuration
  command: a2ensite {{ item }}
  args:
    creates: /etc/apache2/sites-enabled/{{ item }}.conf
  notify: reload apache
  with_items:
    - 000-sites
    - reverseproxy

- name: remove apache configuration from previous versions of the role + default sites
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/apache2/sites-enabled/sites.conf
    - /etc/apache2/sites-enabled/000-default.conf
    - /etc/apache2/sites-enabled/default-ssl.conf
    - /etc/apache2/sites-available/sites.conf
    - /var/www/html/index.html
  notify: reload apache
  tags: ssl

##### SERVICE #####

- name: enable/disable start/stop apache2 service
  systemd:
    name: apache2
    enabled: "{{ apache_enable_service }}"
    state: "{{ 'started' if apache_enable_service else 'stopped' }}"
    daemon_reload: yes
  ignore_errors: "{{ ansible_check_mode }}"
